# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- "*"

stages:
  - stage: test
    jobs:
      - job: 'validateandtest'
        pool:
          vmimage: windows-latest
        steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'ARM Deployment'
              subscriptionId: '9505fc5c-5c27-40bd-a0e9-c8fae6ea400e'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'BA_ARM_DeploymentDemo'
              location: 'East US'
              templateLocation: 'Linked artifact'
              csmFile: '$(Build.SourcesDirectory)/azuredeploy.json'
              csmParametersFile: '$(Build.SourcesDirectory)/azuredeploy.parameters.json'
              deploymentMode: 'Validation'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                
                	
                Install-Module Az.Resources -RequiredVersion 1.12.1-preview -AllowPrerelease -Force -Scope CurrentUser
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'ARM Deployment'
              ScriptType: 'InlineScript'
              Inline: |
                # You can write your azure powershell scripts inline here. 
                # You can also pass predefined and custom variables to this script using arguments
                $Parameters = @{
                  ResourcegroupName     = "BA_ARM_DeploymentDemo"
                  Templatefile          = ".\azuredeploy.json"
                  TemplateParameterfile = ".\azuredeploy.parameters.json"
                  Mode                  = 'Incremental'
                 }
                $Result = Get-AzResourceGroupDeploymentWhatIfResult @Parameters
                $Result
              azurePowerShellVersion: 'LatestVersion'
